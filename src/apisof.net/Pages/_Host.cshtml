@page "/"
@namespace ApisOfDotNet.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>.NET API Catalog</title>
    <base href="~/" />
    <link rel="icon" type="image/png" href="favicon.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous" />
    <link href="css/site.css" rel="stylesheet" asp-append-version="true" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" type="text/javascript" crossorigin="anonymous"></script>
    <script type="text/javascript">
        // var observer = new MutationObserver(function (mutations, observer) {
        //     $('[data-toggle="popover"]').popover({
        //         placement: 'top',
        //         trigger: 'hover',
        //         boundary: 'body'
        //     });
        //     $('[data-toggle="popover"]').on('click', function () {
        //         $('[data-toggle="popover"]').popover('dispose');
        //     });
        //     $('.search-result-row.selected').each(function () {
        //         this.scrollIntoView({block: "nearest"});
        //     });
        // });
        // observer.observe(document, {
        //     subtree: true,
        //     childList: true,
        //     attributes: true
        // });
    </script>
</body>
</html>
